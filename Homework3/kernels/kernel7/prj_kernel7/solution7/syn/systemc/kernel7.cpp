// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kernel7.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kernel7::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kernel7::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<24> kernel7::ap_ST_fsm_state1 = "1";
const sc_lv<24> kernel7::ap_ST_fsm_state2 = "10";
const sc_lv<24> kernel7::ap_ST_fsm_state3 = "100";
const sc_lv<24> kernel7::ap_ST_fsm_state4 = "1000";
const sc_lv<24> kernel7::ap_ST_fsm_state5 = "10000";
const sc_lv<24> kernel7::ap_ST_fsm_state6 = "100000";
const sc_lv<24> kernel7::ap_ST_fsm_state7 = "1000000";
const sc_lv<24> kernel7::ap_ST_fsm_state8 = "10000000";
const sc_lv<24> kernel7::ap_ST_fsm_pp0_stage0 = "100000000";
const sc_lv<24> kernel7::ap_ST_fsm_pp0_stage1 = "1000000000";
const sc_lv<24> kernel7::ap_ST_fsm_pp0_stage2 = "10000000000";
const sc_lv<24> kernel7::ap_ST_fsm_pp0_stage3 = "100000000000";
const sc_lv<24> kernel7::ap_ST_fsm_state16 = "1000000000000";
const sc_lv<24> kernel7::ap_ST_fsm_state17 = "10000000000000";
const sc_lv<24> kernel7::ap_ST_fsm_state18 = "100000000000000";
const sc_lv<24> kernel7::ap_ST_fsm_state19 = "1000000000000000";
const sc_lv<24> kernel7::ap_ST_fsm_state20 = "10000000000000000";
const sc_lv<24> kernel7::ap_ST_fsm_state21 = "100000000000000000";
const sc_lv<24> kernel7::ap_ST_fsm_state22 = "1000000000000000000";
const sc_lv<24> kernel7::ap_ST_fsm_state23 = "10000000000000000000";
const sc_lv<24> kernel7::ap_ST_fsm_state24 = "100000000000000000000";
const sc_lv<24> kernel7::ap_ST_fsm_state25 = "1000000000000000000000";
const sc_lv<24> kernel7::ap_ST_fsm_state26 = "10000000000000000000000";
const sc_lv<24> kernel7::ap_ST_fsm_state27 = "100000000000000000000000";
const sc_lv<32> kernel7::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool kernel7::ap_const_boolean_1 = true;
const sc_lv<32> kernel7::ap_const_lv32_1 = "1";
const sc_lv<32> kernel7::ap_const_lv32_9 = "1001";
const bool kernel7::ap_const_boolean_0 = false;
const sc_lv<1> kernel7::ap_const_lv1_0 = "0";
const sc_lv<32> kernel7::ap_const_lv32_2 = "10";
const sc_lv<32> kernel7::ap_const_lv32_5 = "101";
const sc_lv<32> kernel7::ap_const_lv32_6 = "110";
const sc_lv<32> kernel7::ap_const_lv32_8 = "1000";
const sc_lv<32> kernel7::ap_const_lv32_B = "1011";
const sc_lv<32> kernel7::ap_const_lv32_A = "1010";
const sc_lv<32> kernel7::ap_const_lv32_C = "1100";
const sc_lv<32> kernel7::ap_const_lv32_D = "1101";
const sc_lv<32> kernel7::ap_const_lv32_F = "1111";
const sc_lv<32> kernel7::ap_const_lv32_10 = "10000";
const sc_lv<32> kernel7::ap_const_lv32_11 = "10001";
const sc_lv<32> kernel7::ap_const_lv32_13 = "10011";
const sc_lv<32> kernel7::ap_const_lv32_14 = "10100";
const sc_lv<32> kernel7::ap_const_lv32_15 = "10101";
const sc_lv<32> kernel7::ap_const_lv32_7 = "111";
const sc_lv<1> kernel7::ap_const_lv1_1 = "1";
const sc_lv<11> kernel7::ap_const_lv11_3 = "11";
const sc_lv<64> kernel7::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> kernel7::ap_const_lv64_1 = "1";
const sc_lv<64> kernel7::ap_const_lv64_2 = "10";
const sc_lv<32> kernel7::ap_const_lv32_3 = "11";
const sc_lv<11> kernel7::ap_const_lv11_400 = "10000000000";
const sc_lv<32> kernel7::ap_const_lv32_17 = "10111";
const sc_lv<32> kernel7::ap_const_lv32_1E = "11110";
const sc_lv<8> kernel7::ap_const_lv8_FF = "11111111";
const sc_lv<23> kernel7::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<11> kernel7::ap_const_lv11_1 = "1";
const sc_lv<2> kernel7::ap_const_lv2_0 = "00";
const sc_lv<2> kernel7::ap_const_lv2_1 = "1";
const sc_lv<5> kernel7::ap_const_lv5_2 = "10";

kernel7::kernel7(sc_module_name name) : sc_module(name), mVcdFile(0) {
    kernel7_faddfsub_bkb_U1 = new kernel7_faddfsub_bkb<1,4,32,32,32>("kernel7_faddfsub_bkb_U1");
    kernel7_faddfsub_bkb_U1->clk(ap_clk);
    kernel7_faddfsub_bkb_U1->reset(ap_rst);
    kernel7_faddfsub_bkb_U1->din0(grp_fu_200_p0);
    kernel7_faddfsub_bkb_U1->din1(grp_fu_200_p1);
    kernel7_faddfsub_bkb_U1->opcode(grp_fu_200_opcode);
    kernel7_faddfsub_bkb_U1->ce(ap_var_for_const0);
    kernel7_faddfsub_bkb_U1->dout(grp_fu_200_p2);
    kernel7_fsub_32nscud_U2 = new kernel7_fsub_32nscud<1,4,32,32,32>("kernel7_fsub_32nscud_U2");
    kernel7_fsub_32nscud_U2->clk(ap_clk);
    kernel7_fsub_32nscud_U2->reset(ap_rst);
    kernel7_fsub_32nscud_U2->din0(a_load_2_reg_476);
    kernel7_fsub_32nscud_U2->din1(b_load_2_reg_481);
    kernel7_fsub_32nscud_U2->ce(ap_var_for_const0);
    kernel7_fsub_32nscud_U2->dout(grp_fu_204_p2);
    kernel7_fcmp_32nsdEe_U3 = new kernel7_fcmp_32nsdEe<1,2,32,32,1>("kernel7_fcmp_32nsdEe_U3");
    kernel7_fcmp_32nsdEe_U3->clk(ap_clk);
    kernel7_fcmp_32nsdEe_U3->reset(ap_rst);
    kernel7_fcmp_32nsdEe_U3->din0(grp_fu_212_p0);
    kernel7_fcmp_32nsdEe_U3->din1(ap_var_for_const1);
    kernel7_fcmp_32nsdEe_U3->ce(ap_var_for_const0);
    kernel7_fcmp_32nsdEe_U3->opcode(ap_var_for_const2);
    kernel7_fcmp_32nsdEe_U3->dout(grp_fu_212_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_a_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln14_fu_238_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_a_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_and_ln16_fu_284_p2);
    sensitive << ( tmp_8_reg_530 );
    sensitive << ( or_ln16_fu_280_p2 );

    SC_METHOD(thread_and_ln22_fu_331_p2);
    sensitive << ( tmp_1_reg_555 );
    sensitive << ( or_ln22_fu_327_p2 );

    SC_METHOD(thread_and_ln24_fu_378_p2);
    sensitive << ( tmp_4_reg_576 );
    sensitive << ( or_ln24_fu_374_p2 );

    SC_METHOD(thread_and_ln26_fu_424_p2);
    sensitive << ( tmp_6_reg_597 );
    sensitive << ( or_ln26_fu_420_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_00001);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_00001);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state11_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state12_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state14_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state15_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state11);
    sensitive << ( icmp_ln12_reg_501 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_148_p4);
    sensitive << ( i_0_reg_144 );
    sensitive << ( icmp_ln12_reg_501 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_525 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_ap_return);
    sensitive << ( grp_fu_200_p2 );
    sensitive << ( sum_3_reg_581 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( and_ln26_fu_424_p2 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_b_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln14_fu_238_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_b_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_bitcast_ln16_fu_244_p1);
    sensitive << ( diff1_0_reg_166 );

    SC_METHOD(thread_bitcast_ln22_fu_297_p1);
    sensitive << ( diff1_0_reg_166 );

    SC_METHOD(thread_bitcast_ln24_fu_344_p1);
    sensitive << ( diff1_1_reg_156 );

    SC_METHOD(thread_bitcast_ln26_fu_390_p1);
    sensitive << ( diff2_1_reg_189 );

    SC_METHOD(thread_grp_fu_200_opcode);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln12_reg_501 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_pp0_stage3_00001 );
    sensitive << ( ap_block_pp0_stage2_00001 );

    SC_METHOD(thread_grp_fu_200_p0);
    sensitive << ( sum_0_reg_177 );
    sensitive << ( reg_220 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( a_load_1_reg_466 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( sum_1_reg_560 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( sum_3_reg_581 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_200_p1);
    sensitive << ( diff1_1_reg_156 );
    sensitive << ( diff1_0_reg_166 );
    sensitive << ( diff2_1_reg_189 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( reg_226 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( b_load_1_reg_471 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_212_p0);
    sensitive << ( diff1_1_reg_156 );
    sensitive << ( diff1_0_reg_166 );
    sensitive << ( diff2_1_reg_189 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_i_fu_274_p2);
    sensitive << ( i_0_reg_144 );

    SC_METHOD(thread_icmp_ln12_fu_232_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_148_p4 );

    SC_METHOD(thread_icmp_ln16_1_fu_268_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln12_reg_501 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( trunc_ln16_fu_258_p1 );

    SC_METHOD(thread_icmp_ln16_fu_262_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln12_reg_501 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( tmp_7_fu_248_p4 );

    SC_METHOD(thread_icmp_ln22_1_fu_321_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( trunc_ln22_fu_311_p1 );

    SC_METHOD(thread_icmp_ln22_fu_315_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_fu_301_p4 );

    SC_METHOD(thread_icmp_ln24_1_fu_368_p2);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( trunc_ln24_fu_358_p1 );

    SC_METHOD(thread_icmp_ln24_fu_362_p2);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( tmp_3_fu_348_p4 );

    SC_METHOD(thread_icmp_ln26_1_fu_414_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( trunc_ln26_fu_404_p1 );

    SC_METHOD(thread_icmp_ln26_fu_408_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_5_fu_394_p4 );

    SC_METHOD(thread_or_ln16_fu_280_p2);
    sensitive << ( icmp_ln16_reg_515 );
    sensitive << ( icmp_ln16_1_reg_520 );

    SC_METHOD(thread_or_ln22_fu_327_p2);
    sensitive << ( icmp_ln22_reg_545 );
    sensitive << ( icmp_ln22_1_reg_550 );

    SC_METHOD(thread_or_ln24_fu_374_p2);
    sensitive << ( icmp_ln24_reg_566 );
    sensitive << ( icmp_ln24_1_reg_571 );

    SC_METHOD(thread_or_ln26_fu_420_p2);
    sensitive << ( icmp_ln26_reg_587 );
    sensitive << ( icmp_ln26_1_reg_592 );

    SC_METHOD(thread_sum_1_fu_336_p3);
    sensitive << ( sum_0_reg_177 );
    sensitive << ( grp_fu_200_p2 );
    sensitive << ( and_ln22_fu_331_p2 );

    SC_METHOD(thread_sum_3_fu_383_p3);
    sensitive << ( grp_fu_200_p2 );
    sensitive << ( sum_1_reg_560 );
    sensitive << ( and_ln24_fu_378_p2 );

    SC_METHOD(thread_sum_7_fu_289_p3);
    sensitive << ( sum_0_reg_177 );
    sensitive << ( grp_fu_200_p2 );
    sensitive << ( and_ln16_fu_284_p2 );

    SC_METHOD(thread_tmp_3_fu_348_p4);
    sensitive << ( bitcast_ln24_fu_344_p1 );

    SC_METHOD(thread_tmp_5_fu_394_p4);
    sensitive << ( bitcast_ln26_fu_390_p1 );

    SC_METHOD(thread_tmp_7_fu_248_p4);
    sensitive << ( bitcast_ln16_fu_244_p1 );

    SC_METHOD(thread_tmp_fu_301_p4);
    sensitive << ( bitcast_ln22_fu_297_p1 );

    SC_METHOD(thread_trunc_ln16_fu_258_p1);
    sensitive << ( bitcast_ln16_fu_244_p1 );

    SC_METHOD(thread_trunc_ln22_fu_311_p1);
    sensitive << ( bitcast_ln22_fu_297_p1 );

    SC_METHOD(thread_trunc_ln24_fu_358_p1);
    sensitive << ( bitcast_ln24_fu_344_p1 );

    SC_METHOD(thread_trunc_ln26_fu_404_p1);
    sensitive << ( bitcast_ln26_fu_390_p1 );

    SC_METHOD(thread_zext_ln14_fu_238_p1);
    sensitive << ( ap_phi_mux_i_0_phi_fu_148_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln12_reg_501 );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "000000000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kernel7_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_address0, "(port)a_address0");
    sc_trace(mVcdFile, a_ce0, "(port)a_ce0");
    sc_trace(mVcdFile, a_q0, "(port)a_q0");
    sc_trace(mVcdFile, a_address1, "(port)a_address1");
    sc_trace(mVcdFile, a_ce1, "(port)a_ce1");
    sc_trace(mVcdFile, a_q1, "(port)a_q1");
    sc_trace(mVcdFile, b_address0, "(port)b_address0");
    sc_trace(mVcdFile, b_ce0, "(port)b_ce0");
    sc_trace(mVcdFile, b_q0, "(port)b_q0");
    sc_trace(mVcdFile, b_address1, "(port)b_address1");
    sc_trace(mVcdFile, b_ce1, "(port)b_ce1");
    sc_trace(mVcdFile, b_q1, "(port)b_q1");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_0_reg_144, "i_0_reg_144");
    sc_trace(mVcdFile, diff1_1_reg_156, "diff1_1_reg_156");
    sc_trace(mVcdFile, diff1_0_reg_166, "diff1_0_reg_166");
    sc_trace(mVcdFile, sum_0_reg_177, "sum_0_reg_177");
    sc_trace(mVcdFile, diff2_1_reg_189, "diff2_1_reg_189");
    sc_trace(mVcdFile, reg_220, "reg_220");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage1_iter0, "ap_block_state10_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage1_iter1, "ap_block_state14_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, icmp_ln12_reg_501, "icmp_ln12_reg_501");
    sc_trace(mVcdFile, reg_226, "reg_226");
    sc_trace(mVcdFile, a_load_1_reg_466, "a_load_1_reg_466");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, b_load_1_reg_471, "b_load_1_reg_471");
    sc_trace(mVcdFile, a_load_2_reg_476, "a_load_2_reg_476");
    sc_trace(mVcdFile, b_load_2_reg_481, "b_load_2_reg_481");
    sc_trace(mVcdFile, grp_fu_200_p2, "grp_fu_200_p2");
    sc_trace(mVcdFile, diff1_reg_486, "diff1_reg_486");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, diff2_reg_491, "diff2_reg_491");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_204_p2, "grp_fu_204_p2");
    sc_trace(mVcdFile, diff3_reg_496, "diff3_reg_496");
    sc_trace(mVcdFile, icmp_ln12_fu_232_p2, "icmp_ln12_fu_232_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter0, "ap_block_state9_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter1, "ap_block_state13_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln12_reg_501_pp0_iter1_reg, "icmp_ln12_reg_501_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln16_fu_262_p2, "icmp_ln16_fu_262_p2");
    sc_trace(mVcdFile, icmp_ln16_reg_515, "icmp_ln16_reg_515");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage3_iter0, "ap_block_state12_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, icmp_ln16_1_fu_268_p2, "icmp_ln16_1_fu_268_p2");
    sc_trace(mVcdFile, icmp_ln16_1_reg_520, "icmp_ln16_1_reg_520");
    sc_trace(mVcdFile, i_fu_274_p2, "i_fu_274_p2");
    sc_trace(mVcdFile, i_reg_525, "i_reg_525");
    sc_trace(mVcdFile, grp_fu_212_p2, "grp_fu_212_p2");
    sc_trace(mVcdFile, tmp_8_reg_530, "tmp_8_reg_530");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, diff4_reg_535, "diff4_reg_535");
    sc_trace(mVcdFile, sum_7_fu_289_p3, "sum_7_fu_289_p3");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage2_iter0, "ap_block_state11_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage2_iter1, "ap_block_state15_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, icmp_ln22_fu_315_p2, "icmp_ln22_fu_315_p2");
    sc_trace(mVcdFile, icmp_ln22_reg_545, "icmp_ln22_reg_545");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, icmp_ln22_1_fu_321_p2, "icmp_ln22_1_fu_321_p2");
    sc_trace(mVcdFile, icmp_ln22_1_reg_550, "icmp_ln22_1_reg_550");
    sc_trace(mVcdFile, tmp_1_reg_555, "tmp_1_reg_555");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, sum_1_fu_336_p3, "sum_1_fu_336_p3");
    sc_trace(mVcdFile, sum_1_reg_560, "sum_1_reg_560");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, icmp_ln24_fu_362_p2, "icmp_ln24_fu_362_p2");
    sc_trace(mVcdFile, icmp_ln24_reg_566, "icmp_ln24_reg_566");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, icmp_ln24_1_fu_368_p2, "icmp_ln24_1_fu_368_p2");
    sc_trace(mVcdFile, icmp_ln24_1_reg_571, "icmp_ln24_1_reg_571");
    sc_trace(mVcdFile, tmp_4_reg_576, "tmp_4_reg_576");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, sum_3_fu_383_p3, "sum_3_fu_383_p3");
    sc_trace(mVcdFile, sum_3_reg_581, "sum_3_reg_581");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, icmp_ln26_fu_408_p2, "icmp_ln26_fu_408_p2");
    sc_trace(mVcdFile, icmp_ln26_reg_587, "icmp_ln26_reg_587");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, icmp_ln26_1_fu_414_p2, "icmp_ln26_1_fu_414_p2");
    sc_trace(mVcdFile, icmp_ln26_1_reg_592, "icmp_ln26_1_reg_592");
    sc_trace(mVcdFile, tmp_6_reg_597, "tmp_6_reg_597");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state11, "ap_condition_pp0_exit_iter0_state11");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_148_p4, "ap_phi_mux_i_0_phi_fu_148_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, zext_ln14_fu_238_p1, "zext_ln14_fu_238_p1");
    sc_trace(mVcdFile, grp_fu_200_p0, "grp_fu_200_p0");
    sc_trace(mVcdFile, grp_fu_200_p1, "grp_fu_200_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, grp_fu_212_p0, "grp_fu_212_p0");
    sc_trace(mVcdFile, bitcast_ln16_fu_244_p1, "bitcast_ln16_fu_244_p1");
    sc_trace(mVcdFile, tmp_7_fu_248_p4, "tmp_7_fu_248_p4");
    sc_trace(mVcdFile, trunc_ln16_fu_258_p1, "trunc_ln16_fu_258_p1");
    sc_trace(mVcdFile, or_ln16_fu_280_p2, "or_ln16_fu_280_p2");
    sc_trace(mVcdFile, and_ln16_fu_284_p2, "and_ln16_fu_284_p2");
    sc_trace(mVcdFile, bitcast_ln22_fu_297_p1, "bitcast_ln22_fu_297_p1");
    sc_trace(mVcdFile, tmp_fu_301_p4, "tmp_fu_301_p4");
    sc_trace(mVcdFile, trunc_ln22_fu_311_p1, "trunc_ln22_fu_311_p1");
    sc_trace(mVcdFile, or_ln22_fu_327_p2, "or_ln22_fu_327_p2");
    sc_trace(mVcdFile, and_ln22_fu_331_p2, "and_ln22_fu_331_p2");
    sc_trace(mVcdFile, bitcast_ln24_fu_344_p1, "bitcast_ln24_fu_344_p1");
    sc_trace(mVcdFile, tmp_3_fu_348_p4, "tmp_3_fu_348_p4");
    sc_trace(mVcdFile, trunc_ln24_fu_358_p1, "trunc_ln24_fu_358_p1");
    sc_trace(mVcdFile, or_ln24_fu_374_p2, "or_ln24_fu_374_p2");
    sc_trace(mVcdFile, and_ln24_fu_378_p2, "and_ln24_fu_378_p2");
    sc_trace(mVcdFile, bitcast_ln26_fu_390_p1, "bitcast_ln26_fu_390_p1");
    sc_trace(mVcdFile, tmp_5_fu_394_p4, "tmp_5_fu_394_p4");
    sc_trace(mVcdFile, trunc_ln26_fu_404_p1, "trunc_ln26_fu_404_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, or_ln26_fu_420_p2, "or_ln26_fu_420_p2");
    sc_trace(mVcdFile, and_ln26_fu_424_p2, "and_ln26_fu_424_p2");
    sc_trace(mVcdFile, grp_fu_200_opcode, "grp_fu_200_opcode");
    sc_trace(mVcdFile, ap_block_pp0_stage3_00001, "ap_block_pp0_stage3_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage2_00001, "ap_block_pp0_stage2_00001");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("kernel7.hdltvin.dat");
    mHdltvoutHandle.open("kernel7.hdltvout.dat");
}

kernel7::~kernel7() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete kernel7_faddfsub_bkb_U1;
    delete kernel7_fsub_32nscud_U2;
    delete kernel7_fcmp_32nsdEe_U3;
}

void kernel7::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void kernel7::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void kernel7::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void kernel7::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state11.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_reg_501_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        diff1_0_reg_166 = diff1_1_reg_156.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        diff1_0_reg_166 = diff1_reg_486.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_reg_501_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        diff1_1_reg_156 = diff2_1_reg_189.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        diff1_1_reg_156 = diff2_reg_491.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_reg_501_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        diff2_1_reg_189 = diff4_reg_535.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        diff2_1_reg_189 = diff3_reg_496.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln12_reg_501.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_144 = i_reg_525.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_0_reg_144 = ap_const_lv11_3;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln12_reg_501.read(), ap_const_lv1_0))) {
        reg_220 = a_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        reg_220 = a_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln12_reg_501.read(), ap_const_lv1_0))) {
        reg_226 = b_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        reg_226 = b_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_reg_501_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        sum_0_reg_177 = sum_7_fu_289_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sum_0_reg_177 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_load_1_reg_466 = a_q0.read();
        a_load_2_reg_476 = a_q1.read();
        b_load_1_reg_471 = b_q0.read();
        b_load_2_reg_481 = b_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        diff1_reg_486 = grp_fu_200_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        diff2_reg_491 = grp_fu_200_p2.read();
        diff3_reg_496 = grp_fu_204_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_reg_501_pp0_iter1_reg.read()))) {
        diff4_reg_535 = grp_fu_200_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln12_reg_501.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        i_reg_525 = i_fu_274_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln12_reg_501 = icmp_ln12_fu_232_p2.read();
        icmp_ln12_reg_501_pp0_iter1_reg = icmp_ln12_reg_501.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln12_reg_501.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        icmp_ln16_1_reg_520 = icmp_ln16_1_fu_268_p2.read();
        icmp_ln16_reg_515 = icmp_ln16_fu_262_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        icmp_ln22_1_reg_550 = icmp_ln22_1_fu_321_p2.read();
        icmp_ln22_reg_545 = icmp_ln22_fu_315_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        icmp_ln24_1_reg_571 = icmp_ln24_1_fu_368_p2.read();
        icmp_ln24_reg_566 = icmp_ln24_fu_362_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        icmp_ln26_1_reg_592 = icmp_ln26_1_fu_414_p2.read();
        icmp_ln26_reg_587 = icmp_ln26_fu_408_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        sum_1_reg_560 = sum_1_fu_336_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        sum_3_reg_581 = sum_3_fu_383_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        tmp_1_reg_555 = grp_fu_212_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tmp_4_reg_576 = grp_fu_212_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        tmp_6_reg_597 = grp_fu_212_p2.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln12_reg_501.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        tmp_8_reg_530 = grp_fu_212_p2.read();
    }
}

void kernel7::thread_a_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_address0 =  (sc_lv<10>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        a_address0 =  (sc_lv<10>) (ap_const_lv64_0);
    } else {
        a_address0 = "XXXXXXXXXX";
    }
}

void kernel7::thread_a_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        a_address1 =  (sc_lv<10>) (zext_ln14_fu_238_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_address1 =  (sc_lv<10>) (ap_const_lv64_2);
    } else {
        a_address1 = "XXXXXXXXXX";
    }
}

void kernel7::thread_a_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void kernel7::thread_a_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        a_ce1 = ap_const_logic_1;
    } else {
        a_ce1 = ap_const_logic_0;
    }
}

void kernel7::thread_and_ln16_fu_284_p2() {
    and_ln16_fu_284_p2 = (or_ln16_fu_280_p2.read() & tmp_8_reg_530.read());
}

void kernel7::thread_and_ln22_fu_331_p2() {
    and_ln22_fu_331_p2 = (or_ln22_fu_327_p2.read() & tmp_1_reg_555.read());
}

void kernel7::thread_and_ln24_fu_378_p2() {
    and_ln24_fu_378_p2 = (or_ln24_fu_374_p2.read() & tmp_4_reg_576.read());
}

void kernel7::thread_and_ln26_fu_424_p2() {
    and_ln26_fu_424_p2 = (or_ln26_fu_420_p2.read() & tmp_6_reg_597.read());
}

void kernel7::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[8];
}

void kernel7::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[9];
}

void kernel7::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[10];
}

void kernel7::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[11];
}

void kernel7::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void kernel7::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[12];
}

void kernel7::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[13];
}

void kernel7::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[15];
}

void kernel7::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void kernel7::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[16];
}

void kernel7::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[17];
}

void kernel7::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[19];
}

void kernel7::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[20];
}

void kernel7::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[21];
}

void kernel7::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[23];
}

void kernel7::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void kernel7::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void kernel7::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void kernel7::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void kernel7::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void kernel7::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage2_00001() {
    ap_block_pp0_stage2_00001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage3_00001() {
    ap_block_pp0_stage3_00001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state10_pp0_stage1_iter0() {
    ap_block_state10_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state11_pp0_stage2_iter0() {
    ap_block_state11_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state12_pp0_stage3_iter0() {
    ap_block_state12_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state13_pp0_stage0_iter1() {
    ap_block_state13_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state14_pp0_stage1_iter1() {
    ap_block_state14_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state15_pp0_stage2_iter1() {
    ap_block_state15_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state9_pp0_stage0_iter0() {
    ap_block_state9_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_condition_pp0_exit_iter0_state11() {
    if (esl_seteq<1,1,1>(icmp_ln12_reg_501.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state11 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state11 = ap_const_logic_0;
    }
}

void kernel7::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void kernel7::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void kernel7::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kernel7::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void kernel7::thread_ap_phi_mux_i_0_phi_fu_148_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln12_reg_501.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_148_p4 = i_reg_525.read();
    } else {
        ap_phi_mux_i_0_phi_fu_148_p4 = i_0_reg_144.read();
    }
}

void kernel7::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kernel7::thread_ap_return() {
    ap_return = (!and_ln26_fu_424_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln26_fu_424_p2.read()[0].to_bool())? grp_fu_200_p2.read(): sum_3_reg_581.read());
}

void kernel7::thread_b_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        b_address0 =  (sc_lv<10>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        b_address0 =  (sc_lv<10>) (ap_const_lv64_0);
    } else {
        b_address0 = "XXXXXXXXXX";
    }
}

void kernel7::thread_b_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        b_address1 =  (sc_lv<10>) (zext_ln14_fu_238_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        b_address1 =  (sc_lv<10>) (ap_const_lv64_2);
    } else {
        b_address1 = "XXXXXXXXXX";
    }
}

void kernel7::thread_b_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void kernel7::thread_b_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        b_ce1 = ap_const_logic_1;
    } else {
        b_ce1 = ap_const_logic_0;
    }
}

void kernel7::thread_bitcast_ln16_fu_244_p1() {
    bitcast_ln16_fu_244_p1 = diff1_0_reg_166.read();
}

void kernel7::thread_bitcast_ln22_fu_297_p1() {
    bitcast_ln22_fu_297_p1 = diff1_0_reg_166.read();
}

void kernel7::thread_bitcast_ln24_fu_344_p1() {
    bitcast_ln24_fu_344_p1 = diff1_1_reg_156.read();
}

void kernel7::thread_bitcast_ln26_fu_390_p1() {
    bitcast_ln26_fu_390_p1 = diff2_1_reg_189.read();
}

void kernel7::thread_grp_fu_200_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln12_reg_501.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_00001.read(), ap_const_boolean_0)))) {
        grp_fu_200_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(icmp_ln12_reg_501.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage3_00001.read(), ap_const_boolean_0)))) {
        grp_fu_200_opcode = ap_const_lv2_0;
    } else {
        grp_fu_200_opcode =  (sc_lv<2>) ("XX");
    }
}

void kernel7::thread_grp_fu_200_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_200_p0 = sum_3_reg_581.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_200_p0 = sum_1_reg_560.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)))) {
        grp_fu_200_p0 = sum_0_reg_177.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_200_p0 = a_load_1_reg_466.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)))) {
        grp_fu_200_p0 = reg_220.read();
    } else {
        grp_fu_200_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel7::thread_grp_fu_200_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_200_p1 = diff2_1_reg_189.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_200_p1 = diff1_1_reg_156.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)))) {
        grp_fu_200_p1 = diff1_0_reg_166.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_200_p1 = b_load_1_reg_471.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)))) {
        grp_fu_200_p1 = reg_226.read();
    } else {
        grp_fu_200_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel7::thread_grp_fu_212_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_212_p0 = diff2_1_reg_189.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_212_p0 = diff1_1_reg_156.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)))) {
        grp_fu_212_p0 = diff1_0_reg_166.read();
    } else {
        grp_fu_212_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel7::thread_i_fu_274_p2() {
    i_fu_274_p2 = (!ap_const_lv11_1.is_01() || !i_0_reg_144.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_1) + sc_biguint<11>(i_0_reg_144.read()));
}

void kernel7::thread_icmp_ln12_fu_232_p2() {
    icmp_ln12_fu_232_p2 = (!ap_phi_mux_i_0_phi_fu_148_p4.read().is_01() || !ap_const_lv11_400.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_148_p4.read() == ap_const_lv11_400);
}

void kernel7::thread_icmp_ln16_1_fu_268_p2() {
    icmp_ln16_1_fu_268_p2 = (!trunc_ln16_fu_258_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln16_fu_258_p1.read() == ap_const_lv23_0);
}

void kernel7::thread_icmp_ln16_fu_262_p2() {
    icmp_ln16_fu_262_p2 = (!tmp_7_fu_248_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_248_p4.read() != ap_const_lv8_FF);
}

void kernel7::thread_icmp_ln22_1_fu_321_p2() {
    icmp_ln22_1_fu_321_p2 = (!trunc_ln22_fu_311_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln22_fu_311_p1.read() == ap_const_lv23_0);
}

void kernel7::thread_icmp_ln22_fu_315_p2() {
    icmp_ln22_fu_315_p2 = (!tmp_fu_301_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_301_p4.read() != ap_const_lv8_FF);
}

void kernel7::thread_icmp_ln24_1_fu_368_p2() {
    icmp_ln24_1_fu_368_p2 = (!trunc_ln24_fu_358_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln24_fu_358_p1.read() == ap_const_lv23_0);
}

void kernel7::thread_icmp_ln24_fu_362_p2() {
    icmp_ln24_fu_362_p2 = (!tmp_3_fu_348_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_348_p4.read() != ap_const_lv8_FF);
}

void kernel7::thread_icmp_ln26_1_fu_414_p2() {
    icmp_ln26_1_fu_414_p2 = (!trunc_ln26_fu_404_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln26_fu_404_p1.read() == ap_const_lv23_0);
}

void kernel7::thread_icmp_ln26_fu_408_p2() {
    icmp_ln26_fu_408_p2 = (!tmp_5_fu_394_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_fu_394_p4.read() != ap_const_lv8_FF);
}

void kernel7::thread_or_ln16_fu_280_p2() {
    or_ln16_fu_280_p2 = (icmp_ln16_1_reg_520.read() | icmp_ln16_reg_515.read());
}

void kernel7::thread_or_ln22_fu_327_p2() {
    or_ln22_fu_327_p2 = (icmp_ln22_1_reg_550.read() | icmp_ln22_reg_545.read());
}

void kernel7::thread_or_ln24_fu_374_p2() {
    or_ln24_fu_374_p2 = (icmp_ln24_1_reg_571.read() | icmp_ln24_reg_566.read());
}

void kernel7::thread_or_ln26_fu_420_p2() {
    or_ln26_fu_420_p2 = (icmp_ln26_1_reg_592.read() | icmp_ln26_reg_587.read());
}

void kernel7::thread_sum_1_fu_336_p3() {
    sum_1_fu_336_p3 = (!and_ln22_fu_331_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln22_fu_331_p2.read()[0].to_bool())? grp_fu_200_p2.read(): sum_0_reg_177.read());
}

void kernel7::thread_sum_3_fu_383_p3() {
    sum_3_fu_383_p3 = (!and_ln24_fu_378_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln24_fu_378_p2.read()[0].to_bool())? grp_fu_200_p2.read(): sum_1_reg_560.read());
}

void kernel7::thread_sum_7_fu_289_p3() {
    sum_7_fu_289_p3 = (!and_ln16_fu_284_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln16_fu_284_p2.read()[0].to_bool())? grp_fu_200_p2.read(): sum_0_reg_177.read());
}

void kernel7::thread_tmp_3_fu_348_p4() {
    tmp_3_fu_348_p4 = bitcast_ln24_fu_344_p1.read().range(30, 23);
}

void kernel7::thread_tmp_5_fu_394_p4() {
    tmp_5_fu_394_p4 = bitcast_ln26_fu_390_p1.read().range(30, 23);
}

void kernel7::thread_tmp_7_fu_248_p4() {
    tmp_7_fu_248_p4 = bitcast_ln16_fu_244_p1.read().range(30, 23);
}

void kernel7::thread_tmp_fu_301_p4() {
    tmp_fu_301_p4 = bitcast_ln22_fu_297_p1.read().range(30, 23);
}

void kernel7::thread_trunc_ln16_fu_258_p1() {
    trunc_ln16_fu_258_p1 = bitcast_ln16_fu_244_p1.read().range(23-1, 0);
}

void kernel7::thread_trunc_ln22_fu_311_p1() {
    trunc_ln22_fu_311_p1 = bitcast_ln22_fu_297_p1.read().range(23-1, 0);
}

void kernel7::thread_trunc_ln24_fu_358_p1() {
    trunc_ln24_fu_358_p1 = bitcast_ln24_fu_344_p1.read().range(23-1, 0);
}

void kernel7::thread_trunc_ln26_fu_404_p1() {
    trunc_ln26_fu_404_p1 = bitcast_ln26_fu_390_p1.read().range(23-1, 0);
}

void kernel7::thread_zext_ln14_fu_238_p1() {
    zext_ln14_fu_238_p1 = esl_zext<64,11>(ap_phi_mux_i_0_phi_fu_148_p4.read());
}

void kernel7::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 512 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln12_reg_501.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln12_reg_501.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 2048 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void kernel7::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_address0\" :  \"" << a_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_ce0\" :  \"" << a_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_q0\" :  \"" << a_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_address1\" :  \"" << a_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_ce1\" :  \"" << a_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_q1\" :  \"" << a_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_address0\" :  \"" << b_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_ce0\" :  \"" << b_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_q0\" :  \"" << b_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_address1\" :  \"" << b_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_ce1\" :  \"" << b_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_q1\" :  \"" << b_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

